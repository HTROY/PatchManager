//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/arall/PatchManager/src/PatchManager.SassyPatching/SassyPatchGrammar/sassy_lexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SassyPatchGrammar {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class sassy_lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COMMENT=1, SPACE=2, USE=3, FUNCTION=4, PRE_IF=5, PRE_ELSE=6, PRE_ELSE_IF=7, 
		MIXIN=8, MIXIN_BLOCK=9, MIXIN_SLOT=10, WHILE=11, FOR=12, FROM=13, THROUGH=14, 
		TO=15, EACH=16, IN=17, SET=18, MERGE=19, REQUIRE=20, STAGE=21, DEFINE_STAGE=22, 
		INCLUDE=23, RETURN=24, PATCH=25, NEW=26, BEFORE=27, AFTER=28, GLOBAL=29, 
		CREATE_CONFIG=30, UPDATE_CONFIG=31, LEFT_BRACE=32, RIGHT_BRACE=33, LEFT_PAREN=34, 
		RIGHT_PAREN=35, LEFT_BRACKET=36, RIGHT_BRACKET=37, SEMICOLON=38, COLON=39, 
		PLUS_COLON=40, MINUS_COLON=41, DIVIDE_COLON=42, MULTIPLY_COLON=43, COMMA=44, 
		ADD=45, SUBTRACT=46, MULTIPLY=47, DIVIDE=48, MODULUS=49, NOT=50, GREATER_THAN=51, 
		GREATER_THAN_EQUAL=52, LESSER_THAN=53, LESSER_THAN_EQUAL=54, EQUAL_TO=55, 
		NOT_EQUAL_TO=56, AND=57, OR=58, IF=59, ELSE=60, WITHOUT=61, NONE=62, TRUE=63, 
		FALSE=64, HEX_NUMBER=65, NUMBER=66, STRING=67, DELETE=68, NAME=69, STRING_NAME=70, 
		CLASS=71, STRING_CLASS=72, VARIABLE=73, LOCALVARIABLE=74, STRING_LOCALVARIABLE=75, 
		RULESET=76, ENSURE=77, STRING_ENSURE=78, ELEMENT=79;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"COMMENT", "MULTILINE_COMMENT", "LINE_COMMENT", "SPACE", "USE", "FUNCTION", 
		"PRE_IF", "PRE_ELSE", "PRE_ELSE_IF", "MIXIN", "MIXIN_BLOCK", "MIXIN_SLOT", 
		"WHILE", "FOR", "FROM", "THROUGH", "TO", "EACH", "IN", "SET", "MERGE", 
		"REQUIRE", "STAGE", "DEFINE_STAGE", "INCLUDE", "RETURN", "PATCH", "NEW", 
		"BEFORE", "AFTER", "GLOBAL", "CREATE_CONFIG", "UPDATE_CONFIG", "LEFT_BRACE", 
		"RIGHT_BRACE", "LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACKET", "RIGHT_BRACKET", 
		"SEMICOLON", "COLON", "PLUS_COLON", "MINUS_COLON", "DIVIDE_COLON", "MULTIPLY_COLON", 
		"COMMA", "ADD", "SUBTRACT", "MULTIPLY", "DIVIDE", "MODULUS", "NOT", "GREATER_THAN", 
		"GREATER_THAN_EQUAL", "LESSER_THAN", "LESSER_THAN_EQUAL", "EQUAL_TO", 
		"NOT_EQUAL_TO", "AND", "OR", "IF", "ELSE", "WITHOUT", "NONE", "TRUE", 
		"FALSE", "HEX_NUMBER", "NUMBER", "STRING", "DELETE", "SHORT_NUMBER", "LONG_NUMBER", 
		"DIGIT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC", "IDENTIFIER", 
		"WILDCARDLESS_IDENTIFIER", "NAME", "STRING_NAME", "CLASS", "STRING_CLASS", 
		"VARIABLE", "LOCALVARIABLE", "STRING_LOCALVARIABLE", "RULESET", "ENSURE", 
		"STRING_ENSURE", "ELEMENT"
	};


	public sassy_lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public sassy_lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'@use'", "'@function'", "'@if'", "'@else'", "'@else-if'", 
		"'@mixin'", "'@mixin-block'", "'@mixin-slot'", "'@while'", "'@for'", "'from'", 
		"'through'", "'to'", "'@each'", "'in'", "'@set'", "'@merge'", "'@require'", 
		"'@stage'", "'@define-stage'", "'@include'", "'@return'", "'@patch'", 
		"'@new'", "'@before'", "'@after'", "'@global'", "'@create-config'", "'@update-config'", 
		"'{'", "'}'", "'('", "')'", "'['", "']'", "';'", "':'", "'+:'", "'-:'", 
		"'/:'", "'*:'", "','", "'+'", "'-'", "'*'", "'/'", "'%'", "'not'", "'>'", 
		"'>='", "'<'", "'<='", "'=='", "'!='", "'and'", "'or'", "'if'", "'else'", 
		"'~'", "'null'", "'true'", "'false'", null, null, null, "'@delete'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COMMENT", "SPACE", "USE", "FUNCTION", "PRE_IF", "PRE_ELSE", "PRE_ELSE_IF", 
		"MIXIN", "MIXIN_BLOCK", "MIXIN_SLOT", "WHILE", "FOR", "FROM", "THROUGH", 
		"TO", "EACH", "IN", "SET", "MERGE", "REQUIRE", "STAGE", "DEFINE_STAGE", 
		"INCLUDE", "RETURN", "PATCH", "NEW", "BEFORE", "AFTER", "GLOBAL", "CREATE_CONFIG", 
		"UPDATE_CONFIG", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_PAREN", "RIGHT_PAREN", 
		"LEFT_BRACKET", "RIGHT_BRACKET", "SEMICOLON", "COLON", "PLUS_COLON", "MINUS_COLON", 
		"DIVIDE_COLON", "MULTIPLY_COLON", "COMMA", "ADD", "SUBTRACT", "MULTIPLY", 
		"DIVIDE", "MODULUS", "NOT", "GREATER_THAN", "GREATER_THAN_EQUAL", "LESSER_THAN", 
		"LESSER_THAN_EQUAL", "EQUAL_TO", "NOT_EQUAL_TO", "AND", "OR", "IF", "ELSE", 
		"WITHOUT", "NONE", "TRUE", "FALSE", "HEX_NUMBER", "NUMBER", "STRING", 
		"DELETE", "NAME", "STRING_NAME", "CLASS", "STRING_CLASS", "VARIABLE", 
		"LOCALVARIABLE", "STRING_LOCALVARIABLE", "RULESET", "ENSURE", "STRING_ENSURE", 
		"ELEMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "sassy_lexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static sassy_lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,79,698,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,1,0,1,0,3,0,184,
		8,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,192,8,1,10,1,12,1,195,9,1,1,1,4,1,198,
		8,1,11,1,12,1,199,1,1,1,1,5,1,204,8,1,10,1,12,1,207,9,1,1,1,4,1,210,8,
		1,11,1,12,1,211,5,1,214,8,1,10,1,12,1,217,9,1,1,1,1,1,1,2,1,2,1,2,1,2,
		5,2,225,8,2,10,2,12,2,228,9,2,1,3,4,3,231,8,3,11,3,12,3,232,1,3,1,3,1,
		4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
		1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,
		9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
		1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,
		1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
		1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
		1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,
		1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,
		1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
		1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
		1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
		1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,
		1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,
		1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,
		1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,
		1,53,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,
		1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,62,
		1,62,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,
		1,65,1,65,1,65,1,66,1,66,1,66,1,66,4,66,561,8,66,11,66,12,66,562,1,67,
		4,67,566,8,67,11,67,12,67,567,1,67,1,67,3,67,572,8,67,1,68,1,68,1,68,5,
		68,577,8,68,10,68,12,68,580,9,68,1,68,1,68,1,68,1,68,5,68,586,8,68,10,
		68,12,68,589,9,68,1,68,3,68,592,8,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,
		1,69,1,70,1,70,4,70,604,8,70,11,70,12,70,605,1,71,4,71,609,8,71,11,71,
		12,71,610,1,71,1,71,4,71,615,8,71,11,71,12,71,616,1,72,1,72,1,73,1,73,
		1,74,1,74,1,74,1,74,3,74,627,8,74,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,
		75,1,75,3,75,638,8,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,5,77,
		649,8,77,10,77,12,77,652,9,77,1,78,1,78,1,78,1,78,5,78,658,8,78,10,78,
		12,78,661,9,78,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,
		1,82,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,
		1,86,1,86,1,86,1,87,1,87,1,87,1,88,1,88,1,88,1,89,1,89,0,0,90,1,1,3,0,
		5,0,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,14,
		33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,25,55,26,
		57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,36,77,37,79,38,
		81,39,83,40,85,41,87,42,89,43,91,44,93,45,95,46,97,47,99,48,101,49,103,
		50,105,51,107,52,109,53,111,54,113,55,115,56,117,57,119,58,121,59,123,
		60,125,61,127,62,129,63,131,64,133,65,135,66,137,67,139,68,141,0,143,0,
		145,0,147,0,149,0,151,0,153,0,155,0,157,0,159,69,161,70,163,71,165,72,
		167,73,169,74,171,75,173,76,175,77,177,78,179,79,1,0,15,1,0,42,42,2,0,
		42,42,47,47,2,0,10,10,13,13,3,0,9,10,12,13,32,32,2,0,34,34,92,92,2,0,39,
		39,92,92,1,0,48,57,3,0,48,57,65,70,97,102,8,0,34,34,39,39,92,92,98,98,
		102,102,110,110,114,114,116,116,6,0,42,42,48,57,63,63,65,90,95,95,97,122,
		7,0,42,42,45,46,48,57,63,63,65,90,95,95,97,122,3,0,65,90,95,95,97,122,
		5,0,46,46,48,57,65,90,95,95,97,122,1,0,45,45,2,0,65,90,97,122,713,0,1,
		1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
		0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
		0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
		0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
		0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,
		0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,159,1,0,0,0,0,161,1,0,
		0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,
		0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,1,183,1,0,
		0,0,3,187,1,0,0,0,5,220,1,0,0,0,7,230,1,0,0,0,9,236,1,0,0,0,11,241,1,0,
		0,0,13,251,1,0,0,0,15,255,1,0,0,0,17,261,1,0,0,0,19,270,1,0,0,0,21,277,
		1,0,0,0,23,290,1,0,0,0,25,302,1,0,0,0,27,309,1,0,0,0,29,314,1,0,0,0,31,
		319,1,0,0,0,33,327,1,0,0,0,35,330,1,0,0,0,37,336,1,0,0,0,39,339,1,0,0,
		0,41,344,1,0,0,0,43,351,1,0,0,0,45,360,1,0,0,0,47,367,1,0,0,0,49,381,1,
		0,0,0,51,390,1,0,0,0,53,398,1,0,0,0,55,405,1,0,0,0,57,410,1,0,0,0,59,418,
		1,0,0,0,61,425,1,0,0,0,63,433,1,0,0,0,65,448,1,0,0,0,67,463,1,0,0,0,69,
		465,1,0,0,0,71,467,1,0,0,0,73,469,1,0,0,0,75,471,1,0,0,0,77,473,1,0,0,
		0,79,475,1,0,0,0,81,477,1,0,0,0,83,479,1,0,0,0,85,482,1,0,0,0,87,485,1,
		0,0,0,89,488,1,0,0,0,91,491,1,0,0,0,93,493,1,0,0,0,95,495,1,0,0,0,97,497,
		1,0,0,0,99,499,1,0,0,0,101,501,1,0,0,0,103,503,1,0,0,0,105,507,1,0,0,0,
		107,509,1,0,0,0,109,512,1,0,0,0,111,514,1,0,0,0,113,517,1,0,0,0,115,520,
		1,0,0,0,117,523,1,0,0,0,119,527,1,0,0,0,121,530,1,0,0,0,123,533,1,0,0,
		0,125,538,1,0,0,0,127,540,1,0,0,0,129,545,1,0,0,0,131,550,1,0,0,0,133,
		556,1,0,0,0,135,571,1,0,0,0,137,591,1,0,0,0,139,593,1,0,0,0,141,601,1,
		0,0,0,143,608,1,0,0,0,145,618,1,0,0,0,147,620,1,0,0,0,149,626,1,0,0,0,
		151,637,1,0,0,0,153,639,1,0,0,0,155,646,1,0,0,0,157,653,1,0,0,0,159,662,
		1,0,0,0,161,665,1,0,0,0,163,668,1,0,0,0,165,671,1,0,0,0,167,674,1,0,0,
		0,169,677,1,0,0,0,171,682,1,0,0,0,173,687,1,0,0,0,175,690,1,0,0,0,177,
		693,1,0,0,0,179,696,1,0,0,0,181,184,3,5,2,0,182,184,3,3,1,0,183,181,1,
		0,0,0,183,182,1,0,0,0,184,185,1,0,0,0,185,186,6,0,0,0,186,2,1,0,0,0,187,
		188,5,47,0,0,188,189,5,42,0,0,189,193,1,0,0,0,190,192,8,0,0,0,191,190,
		1,0,0,0,192,195,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,197,1,0,0,
		0,195,193,1,0,0,0,196,198,5,42,0,0,197,196,1,0,0,0,198,199,1,0,0,0,199,
		197,1,0,0,0,199,200,1,0,0,0,200,215,1,0,0,0,201,205,8,1,0,0,202,204,8,
		0,0,0,203,202,1,0,0,0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,
		206,209,1,0,0,0,207,205,1,0,0,0,208,210,5,42,0,0,209,208,1,0,0,0,210,211,
		1,0,0,0,211,209,1,0,0,0,211,212,1,0,0,0,212,214,1,0,0,0,213,201,1,0,0,
		0,214,217,1,0,0,0,215,213,1,0,0,0,215,216,1,0,0,0,216,218,1,0,0,0,217,
		215,1,0,0,0,218,219,5,47,0,0,219,4,1,0,0,0,220,221,5,47,0,0,221,222,5,
		47,0,0,222,226,1,0,0,0,223,225,8,2,0,0,224,223,1,0,0,0,225,228,1,0,0,0,
		226,224,1,0,0,0,226,227,1,0,0,0,227,6,1,0,0,0,228,226,1,0,0,0,229,231,
		7,3,0,0,230,229,1,0,0,0,231,232,1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,
		0,233,234,1,0,0,0,234,235,6,3,0,0,235,8,1,0,0,0,236,237,5,64,0,0,237,238,
		5,117,0,0,238,239,5,115,0,0,239,240,5,101,0,0,240,10,1,0,0,0,241,242,5,
		64,0,0,242,243,5,102,0,0,243,244,5,117,0,0,244,245,5,110,0,0,245,246,5,
		99,0,0,246,247,5,116,0,0,247,248,5,105,0,0,248,249,5,111,0,0,249,250,5,
		110,0,0,250,12,1,0,0,0,251,252,5,64,0,0,252,253,5,105,0,0,253,254,5,102,
		0,0,254,14,1,0,0,0,255,256,5,64,0,0,256,257,5,101,0,0,257,258,5,108,0,
		0,258,259,5,115,0,0,259,260,5,101,0,0,260,16,1,0,0,0,261,262,5,64,0,0,
		262,263,5,101,0,0,263,264,5,108,0,0,264,265,5,115,0,0,265,266,5,101,0,
		0,266,267,5,45,0,0,267,268,5,105,0,0,268,269,5,102,0,0,269,18,1,0,0,0,
		270,271,5,64,0,0,271,272,5,109,0,0,272,273,5,105,0,0,273,274,5,120,0,0,
		274,275,5,105,0,0,275,276,5,110,0,0,276,20,1,0,0,0,277,278,5,64,0,0,278,
		279,5,109,0,0,279,280,5,105,0,0,280,281,5,120,0,0,281,282,5,105,0,0,282,
		283,5,110,0,0,283,284,5,45,0,0,284,285,5,98,0,0,285,286,5,108,0,0,286,
		287,5,111,0,0,287,288,5,99,0,0,288,289,5,107,0,0,289,22,1,0,0,0,290,291,
		5,64,0,0,291,292,5,109,0,0,292,293,5,105,0,0,293,294,5,120,0,0,294,295,
		5,105,0,0,295,296,5,110,0,0,296,297,5,45,0,0,297,298,5,115,0,0,298,299,
		5,108,0,0,299,300,5,111,0,0,300,301,5,116,0,0,301,24,1,0,0,0,302,303,5,
		64,0,0,303,304,5,119,0,0,304,305,5,104,0,0,305,306,5,105,0,0,306,307,5,
		108,0,0,307,308,5,101,0,0,308,26,1,0,0,0,309,310,5,64,0,0,310,311,5,102,
		0,0,311,312,5,111,0,0,312,313,5,114,0,0,313,28,1,0,0,0,314,315,5,102,0,
		0,315,316,5,114,0,0,316,317,5,111,0,0,317,318,5,109,0,0,318,30,1,0,0,0,
		319,320,5,116,0,0,320,321,5,104,0,0,321,322,5,114,0,0,322,323,5,111,0,
		0,323,324,5,117,0,0,324,325,5,103,0,0,325,326,5,104,0,0,326,32,1,0,0,0,
		327,328,5,116,0,0,328,329,5,111,0,0,329,34,1,0,0,0,330,331,5,64,0,0,331,
		332,5,101,0,0,332,333,5,97,0,0,333,334,5,99,0,0,334,335,5,104,0,0,335,
		36,1,0,0,0,336,337,5,105,0,0,337,338,5,110,0,0,338,38,1,0,0,0,339,340,
		5,64,0,0,340,341,5,115,0,0,341,342,5,101,0,0,342,343,5,116,0,0,343,40,
		1,0,0,0,344,345,5,64,0,0,345,346,5,109,0,0,346,347,5,101,0,0,347,348,5,
		114,0,0,348,349,5,103,0,0,349,350,5,101,0,0,350,42,1,0,0,0,351,352,5,64,
		0,0,352,353,5,114,0,0,353,354,5,101,0,0,354,355,5,113,0,0,355,356,5,117,
		0,0,356,357,5,105,0,0,357,358,5,114,0,0,358,359,5,101,0,0,359,44,1,0,0,
		0,360,361,5,64,0,0,361,362,5,115,0,0,362,363,5,116,0,0,363,364,5,97,0,
		0,364,365,5,103,0,0,365,366,5,101,0,0,366,46,1,0,0,0,367,368,5,64,0,0,
		368,369,5,100,0,0,369,370,5,101,0,0,370,371,5,102,0,0,371,372,5,105,0,
		0,372,373,5,110,0,0,373,374,5,101,0,0,374,375,5,45,0,0,375,376,5,115,0,
		0,376,377,5,116,0,0,377,378,5,97,0,0,378,379,5,103,0,0,379,380,5,101,0,
		0,380,48,1,0,0,0,381,382,5,64,0,0,382,383,5,105,0,0,383,384,5,110,0,0,
		384,385,5,99,0,0,385,386,5,108,0,0,386,387,5,117,0,0,387,388,5,100,0,0,
		388,389,5,101,0,0,389,50,1,0,0,0,390,391,5,64,0,0,391,392,5,114,0,0,392,
		393,5,101,0,0,393,394,5,116,0,0,394,395,5,117,0,0,395,396,5,114,0,0,396,
		397,5,110,0,0,397,52,1,0,0,0,398,399,5,64,0,0,399,400,5,112,0,0,400,401,
		5,97,0,0,401,402,5,116,0,0,402,403,5,99,0,0,403,404,5,104,0,0,404,54,1,
		0,0,0,405,406,5,64,0,0,406,407,5,110,0,0,407,408,5,101,0,0,408,409,5,119,
		0,0,409,56,1,0,0,0,410,411,5,64,0,0,411,412,5,98,0,0,412,413,5,101,0,0,
		413,414,5,102,0,0,414,415,5,111,0,0,415,416,5,114,0,0,416,417,5,101,0,
		0,417,58,1,0,0,0,418,419,5,64,0,0,419,420,5,97,0,0,420,421,5,102,0,0,421,
		422,5,116,0,0,422,423,5,101,0,0,423,424,5,114,0,0,424,60,1,0,0,0,425,426,
		5,64,0,0,426,427,5,103,0,0,427,428,5,108,0,0,428,429,5,111,0,0,429,430,
		5,98,0,0,430,431,5,97,0,0,431,432,5,108,0,0,432,62,1,0,0,0,433,434,5,64,
		0,0,434,435,5,99,0,0,435,436,5,114,0,0,436,437,5,101,0,0,437,438,5,97,
		0,0,438,439,5,116,0,0,439,440,5,101,0,0,440,441,5,45,0,0,441,442,5,99,
		0,0,442,443,5,111,0,0,443,444,5,110,0,0,444,445,5,102,0,0,445,446,5,105,
		0,0,446,447,5,103,0,0,447,64,1,0,0,0,448,449,5,64,0,0,449,450,5,117,0,
		0,450,451,5,112,0,0,451,452,5,100,0,0,452,453,5,97,0,0,453,454,5,116,0,
		0,454,455,5,101,0,0,455,456,5,45,0,0,456,457,5,99,0,0,457,458,5,111,0,
		0,458,459,5,110,0,0,459,460,5,102,0,0,460,461,5,105,0,0,461,462,5,103,
		0,0,462,66,1,0,0,0,463,464,5,123,0,0,464,68,1,0,0,0,465,466,5,125,0,0,
		466,70,1,0,0,0,467,468,5,40,0,0,468,72,1,0,0,0,469,470,5,41,0,0,470,74,
		1,0,0,0,471,472,5,91,0,0,472,76,1,0,0,0,473,474,5,93,0,0,474,78,1,0,0,
		0,475,476,5,59,0,0,476,80,1,0,0,0,477,478,5,58,0,0,478,82,1,0,0,0,479,
		480,5,43,0,0,480,481,5,58,0,0,481,84,1,0,0,0,482,483,5,45,0,0,483,484,
		5,58,0,0,484,86,1,0,0,0,485,486,5,47,0,0,486,487,5,58,0,0,487,88,1,0,0,
		0,488,489,5,42,0,0,489,490,5,58,0,0,490,90,1,0,0,0,491,492,5,44,0,0,492,
		92,1,0,0,0,493,494,5,43,0,0,494,94,1,0,0,0,495,496,5,45,0,0,496,96,1,0,
		0,0,497,498,5,42,0,0,498,98,1,0,0,0,499,500,5,47,0,0,500,100,1,0,0,0,501,
		502,5,37,0,0,502,102,1,0,0,0,503,504,5,110,0,0,504,505,5,111,0,0,505,506,
		5,116,0,0,506,104,1,0,0,0,507,508,5,62,0,0,508,106,1,0,0,0,509,510,5,62,
		0,0,510,511,5,61,0,0,511,108,1,0,0,0,512,513,5,60,0,0,513,110,1,0,0,0,
		514,515,5,60,0,0,515,516,5,61,0,0,516,112,1,0,0,0,517,518,5,61,0,0,518,
		519,5,61,0,0,519,114,1,0,0,0,520,521,5,33,0,0,521,522,5,61,0,0,522,116,
		1,0,0,0,523,524,5,97,0,0,524,525,5,110,0,0,525,526,5,100,0,0,526,118,1,
		0,0,0,527,528,5,111,0,0,528,529,5,114,0,0,529,120,1,0,0,0,530,531,5,105,
		0,0,531,532,5,102,0,0,532,122,1,0,0,0,533,534,5,101,0,0,534,535,5,108,
		0,0,535,536,5,115,0,0,536,537,5,101,0,0,537,124,1,0,0,0,538,539,5,126,
		0,0,539,126,1,0,0,0,540,541,5,110,0,0,541,542,5,117,0,0,542,543,5,108,
		0,0,543,544,5,108,0,0,544,128,1,0,0,0,545,546,5,116,0,0,546,547,5,114,
		0,0,547,548,5,117,0,0,548,549,5,101,0,0,549,130,1,0,0,0,550,551,5,102,
		0,0,551,552,5,97,0,0,552,553,5,108,0,0,553,554,5,115,0,0,554,555,5,101,
		0,0,555,132,1,0,0,0,556,557,5,48,0,0,557,558,5,120,0,0,558,560,1,0,0,0,
		559,561,3,147,73,0,560,559,1,0,0,0,561,562,1,0,0,0,562,560,1,0,0,0,562,
		563,1,0,0,0,563,134,1,0,0,0,564,566,3,145,72,0,565,564,1,0,0,0,566,567,
		1,0,0,0,567,565,1,0,0,0,567,568,1,0,0,0,568,572,1,0,0,0,569,572,3,141,
		70,0,570,572,3,143,71,0,571,565,1,0,0,0,571,569,1,0,0,0,571,570,1,0,0,
		0,572,136,1,0,0,0,573,578,5,34,0,0,574,577,3,149,74,0,575,577,8,4,0,0,
		576,574,1,0,0,0,576,575,1,0,0,0,577,580,1,0,0,0,578,576,1,0,0,0,578,579,
		1,0,0,0,579,581,1,0,0,0,580,578,1,0,0,0,581,592,5,34,0,0,582,587,5,39,
		0,0,583,586,3,149,74,0,584,586,8,5,0,0,585,583,1,0,0,0,585,584,1,0,0,0,
		586,589,1,0,0,0,587,585,1,0,0,0,587,588,1,0,0,0,588,590,1,0,0,0,589,587,
		1,0,0,0,590,592,5,39,0,0,591,573,1,0,0,0,591,582,1,0,0,0,592,138,1,0,0,
		0,593,594,5,64,0,0,594,595,5,100,0,0,595,596,5,101,0,0,596,597,5,108,0,
		0,597,598,5,101,0,0,598,599,5,116,0,0,599,600,5,101,0,0,600,140,1,0,0,
		0,601,603,5,46,0,0,602,604,3,145,72,0,603,602,1,0,0,0,604,605,1,0,0,0,
		605,603,1,0,0,0,605,606,1,0,0,0,606,142,1,0,0,0,607,609,3,145,72,0,608,
		607,1,0,0,0,609,610,1,0,0,0,610,608,1,0,0,0,610,611,1,0,0,0,611,612,1,
		0,0,0,612,614,5,46,0,0,613,615,3,145,72,0,614,613,1,0,0,0,615,616,1,0,
		0,0,616,614,1,0,0,0,616,617,1,0,0,0,617,144,1,0,0,0,618,619,7,6,0,0,619,
		146,1,0,0,0,620,621,7,7,0,0,621,148,1,0,0,0,622,623,5,92,0,0,623,627,7,
		8,0,0,624,627,3,153,76,0,625,627,3,151,75,0,626,622,1,0,0,0,626,624,1,
		0,0,0,626,625,1,0,0,0,627,150,1,0,0,0,628,629,5,92,0,0,629,630,2,48,51,
		0,630,631,2,48,55,0,631,638,2,48,55,0,632,633,5,92,0,0,633,634,2,48,55,
		0,634,638,2,48,55,0,635,636,5,92,0,0,636,638,2,48,55,0,637,628,1,0,0,0,
		637,632,1,0,0,0,637,635,1,0,0,0,638,152,1,0,0,0,639,640,5,92,0,0,640,641,
		5,117,0,0,641,642,3,147,73,0,642,643,3,147,73,0,643,644,3,147,73,0,644,
		645,3,147,73,0,645,154,1,0,0,0,646,650,7,9,0,0,647,649,7,10,0,0,648,647,
		1,0,0,0,649,652,1,0,0,0,650,648,1,0,0,0,650,651,1,0,0,0,651,156,1,0,0,
		0,652,650,1,0,0,0,653,659,7,11,0,0,654,658,7,12,0,0,655,656,7,13,0,0,656,
		658,7,14,0,0,657,654,1,0,0,0,657,655,1,0,0,0,658,661,1,0,0,0,659,657,1,
		0,0,0,659,660,1,0,0,0,660,158,1,0,0,0,661,659,1,0,0,0,662,663,5,35,0,0,
		663,664,3,155,77,0,664,160,1,0,0,0,665,666,5,35,0,0,666,667,3,137,68,0,
		667,162,1,0,0,0,668,669,5,46,0,0,669,670,3,157,78,0,670,164,1,0,0,0,671,
		672,5,46,0,0,672,673,3,137,68,0,673,166,1,0,0,0,674,675,5,36,0,0,675,676,
		3,157,78,0,676,168,1,0,0,0,677,678,5,36,0,0,678,679,5,36,0,0,679,680,1,
		0,0,0,680,681,3,157,78,0,681,170,1,0,0,0,682,683,5,36,0,0,683,684,5,36,
		0,0,684,685,1,0,0,0,685,686,3,137,68,0,686,172,1,0,0,0,687,688,5,58,0,
		0,688,689,3,157,78,0,689,174,1,0,0,0,690,691,5,37,0,0,691,692,3,157,78,
		0,692,176,1,0,0,0,693,694,5,37,0,0,694,695,3,137,68,0,695,178,1,0,0,0,
		696,697,3,157,78,0,697,180,1,0,0,0,25,0,183,193,199,205,211,215,226,232,
		562,567,571,576,578,585,587,591,605,610,616,626,637,650,657,659,1,6,0,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SassyPatchGrammar
