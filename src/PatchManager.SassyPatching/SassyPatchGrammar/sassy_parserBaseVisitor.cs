//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/arall/PatchManager/src/PatchManager.SassyPatching/SassyPatchGrammar\sassy_parser.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SassyPatchGrammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="Isassy_parserVisitor{Result}"/>,
/// which can be extended to create a visitor which only needs to handle a subset
/// of the available methods.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class sassy_parserBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, Isassy_parserVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.patch"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPatch([NotNull] sassy_parser.PatchContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.top_level_statement"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTop_level_statement([NotNull] sassy_parser.Top_level_statementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.patch_declaration"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPatch_declaration([NotNull] sassy_parser.Patch_declarationContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.patch_list"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPatch_list([NotNull] sassy_parser.Patch_listContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>quoted_string</c>
	/// labeled alternative in <see cref="sassy_parser.sassy_string"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitQuoted_string([NotNull] sassy_parser.Quoted_stringContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>unquoted_string</c>
	/// labeled alternative in <see cref="sassy_parser.sassy_string"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitUnquoted_string([NotNull] sassy_parser.Unquoted_stringContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.import_declaration"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitImport_declaration([NotNull] sassy_parser.Import_declarationContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>normal_var_decl</c>
	/// labeled alternative in <see cref="sassy_parser.var_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNormal_var_decl([NotNull] sassy_parser.Normal_var_declContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>add_var_decl</c>
	/// labeled alternative in <see cref="sassy_parser.var_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAdd_var_decl([NotNull] sassy_parser.Add_var_declContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>subtract_var_decl</c>
	/// labeled alternative in <see cref="sassy_parser.var_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSubtract_var_decl([NotNull] sassy_parser.Subtract_var_declContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>divide_var_decl</c>
	/// labeled alternative in <see cref="sassy_parser.var_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDivide_var_decl([NotNull] sassy_parser.Divide_var_declContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>multiply_var_decl</c>
	/// labeled alternative in <see cref="sassy_parser.var_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMultiply_var_decl([NotNull] sassy_parser.Multiply_var_declContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>implicit_stage_def</c>
	/// labeled alternative in <see cref="sassy_parser.stage_def"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitImplicit_stage_def([NotNull] sassy_parser.Implicit_stage_defContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>global_stage_def</c>
	/// labeled alternative in <see cref="sassy_parser.stage_def"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitGlobal_stage_def([NotNull] sassy_parser.Global_stage_defContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>relative_stage_def</c>
	/// labeled alternative in <see cref="sassy_parser.stage_def"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRelative_stage_def([NotNull] sassy_parser.Relative_stage_defContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.config_creation"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitConfig_creation([NotNull] sassy_parser.Config_creationContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>update_config_full</c>
	/// labeled alternative in <see cref="sassy_parser.config_mutation"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitUpdate_config_full([NotNull] sassy_parser.Update_config_fullContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>update_config_label</c>
	/// labeled alternative in <see cref="sassy_parser.config_mutation"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitUpdate_config_label([NotNull] sassy_parser.Update_config_labelContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>stage_value_before</c>
	/// labeled alternative in <see cref="sassy_parser.stage_attribute"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitStage_value_before([NotNull] sassy_parser.Stage_value_beforeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>stage_value_after</c>
	/// labeled alternative in <see cref="sassy_parser.stage_attribute"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitStage_value_after([NotNull] sassy_parser.Stage_value_afterContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.function_def"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFunction_def([NotNull] sassy_parser.Function_defContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.mixin_def"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMixin_def([NotNull] sassy_parser.Mixin_defContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.top_level_conditional"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTop_level_conditional([NotNull] sassy_parser.Top_level_conditionalContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.top_level_else"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTop_level_else([NotNull] sassy_parser.Top_level_elseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.top_level_else_else"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTop_level_else_else([NotNull] sassy_parser.Top_level_else_elseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.top_level_else_if"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTop_level_else_if([NotNull] sassy_parser.Top_level_else_ifContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.selection_block"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSelection_block([NotNull] sassy_parser.Selection_blockContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.attributed_selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAttributed_selector([NotNull] sassy_parser.Attributed_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>require_mod</c>
	/// labeled alternative in <see cref="sassy_parser.attribute"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRequire_mod([NotNull] sassy_parser.Require_modContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>run_at_stage</c>
	/// labeled alternative in <see cref="sassy_parser.attribute"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRun_at_stage([NotNull] sassy_parser.Run_at_stageContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>new_asset</c>
	/// labeled alternative in <see cref="sassy_parser.attribute"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNew_asset([NotNull] sassy_parser.New_assetContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.constructor_arguments"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitConstructor_arguments([NotNull] sassy_parser.Constructor_argumentsContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_class_capture</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_class_capture([NotNull] sassy_parser.Sel_class_captureContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_child</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_child([NotNull] sassy_parser.Sel_childContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_class</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_class([NotNull] sassy_parser.Sel_classContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_name([NotNull] sassy_parser.Sel_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_intersection</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_intersection([NotNull] sassy_parser.Sel_intersectionContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_string_class_capture</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_string_class_capture([NotNull] sassy_parser.Sel_string_class_captureContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_ensure</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_ensure([NotNull] sassy_parser.Sel_ensureContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_everything</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_everything([NotNull] sassy_parser.Sel_everythingContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_without_string_class</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_without_string_class([NotNull] sassy_parser.Sel_without_string_classContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_string_class</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_string_class([NotNull] sassy_parser.Sel_string_classContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_string_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_string_name([NotNull] sassy_parser.Sel_string_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_element</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_element([NotNull] sassy_parser.Sel_elementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_ruleset</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_ruleset([NotNull] sassy_parser.Sel_rulesetContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_add_element</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_add_element([NotNull] sassy_parser.Sel_add_elementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_element_string</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_element_string([NotNull] sassy_parser.Sel_element_stringContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_add_string_element</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_add_string_element([NotNull] sassy_parser.Sel_add_string_elementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_without_string_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_without_string_name([NotNull] sassy_parser.Sel_without_string_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_without_class</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_without_class([NotNull] sassy_parser.Sel_without_classContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_string_ensure</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_string_ensure([NotNull] sassy_parser.Sel_string_ensureContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_without_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_without_name([NotNull] sassy_parser.Sel_without_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_combination</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_combination([NotNull] sassy_parser.Sel_combinationContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sel_sub</c>
	/// labeled alternative in <see cref="sassy_parser.selector"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_sub([NotNull] sassy_parser.Sel_subContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleset_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRuleset_selector([NotNull] sassy_parser.Ruleset_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_class_capture_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_class_capture_selector([NotNull] sassy_parser.String_class_capture_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>without_string_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitWithout_string_name([NotNull] sassy_parser.Without_string_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sub_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSub_selector([NotNull] sassy_parser.Sub_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>class_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitClass_selector([NotNull] sassy_parser.Class_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>without_class</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitWithout_class([NotNull] sassy_parser.Without_classContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_name([NotNull] sassy_parser.String_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_class_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_class_selector([NotNull] sassy_parser.String_class_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>add_string_element</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAdd_string_element([NotNull] sassy_parser.Add_string_elementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>combination_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCombination_selector([NotNull] sassy_parser.Combination_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>class_capture_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitClass_capture_selector([NotNull] sassy_parser.Class_capture_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>without_name</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitWithout_name([NotNull] sassy_parser.Without_nameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>name</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitName([NotNull] sassy_parser.NameContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>add_element</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAdd_element([NotNull] sassy_parser.Add_elementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>without_string_class</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitWithout_string_class([NotNull] sassy_parser.Without_string_classContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>everything</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitEverything([NotNull] sassy_parser.EverythingContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>intersection_selector</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitIntersection_selector([NotNull] sassy_parser.Intersection_selectorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_element</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_element([NotNull] sassy_parser.String_elementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>element</c>
	/// labeled alternative in <see cref="sassy_parser.selector_no_children"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitElement([NotNull] sassy_parser.ElementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.selector_body"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSelector_body([NotNull] sassy_parser.Selector_bodyContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.selector_statement"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSelector_statement([NotNull] sassy_parser.Selector_statementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.sel_level_conditional"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_level_conditional([NotNull] sassy_parser.Sel_level_conditionalContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.sel_level_else"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_level_else([NotNull] sassy_parser.Sel_level_elseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.sel_level_else_else"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_level_else_else([NotNull] sassy_parser.Sel_level_else_elseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.sel_level_else_if"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSel_level_else_if([NotNull] sassy_parser.Sel_level_else_ifContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.set_value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSet_value([NotNull] sassy_parser.Set_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.delete_value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDelete_value([NotNull] sassy_parser.Delete_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.merge_value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMerge_value([NotNull] sassy_parser.Merge_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>normal_field_set</c>
	/// labeled alternative in <see cref="sassy_parser.field_set"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNormal_field_set([NotNull] sassy_parser.Normal_field_setContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>add_field_set</c>
	/// labeled alternative in <see cref="sassy_parser.field_set"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAdd_field_set([NotNull] sassy_parser.Add_field_setContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>subtract_field_set</c>
	/// labeled alternative in <see cref="sassy_parser.field_set"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSubtract_field_set([NotNull] sassy_parser.Subtract_field_setContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>multiply_field_set</c>
	/// labeled alternative in <see cref="sassy_parser.field_set"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMultiply_field_set([NotNull] sassy_parser.Multiply_field_setContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>divide_field_set</c>
	/// labeled alternative in <see cref="sassy_parser.field_set"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDivide_field_set([NotNull] sassy_parser.Divide_field_setContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>number_indexor</c>
	/// labeled alternative in <see cref="sassy_parser.index"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNumber_indexor([NotNull] sassy_parser.Number_indexorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>element_indexor</c>
	/// labeled alternative in <see cref="sassy_parser.index"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitElement_indexor([NotNull] sassy_parser.Element_indexorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>class_indexor</c>
	/// labeled alternative in <see cref="sassy_parser.index"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitClass_indexor([NotNull] sassy_parser.Class_indexorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_indexor</c>
	/// labeled alternative in <see cref="sassy_parser.index"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_indexor([NotNull] sassy_parser.String_indexorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>not_equal_to</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNot_equal_to([NotNull] sassy_parser.Not_equal_toContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>variable_reference</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVariable_reference([NotNull] sassy_parser.Variable_referenceContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>equal_to</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitEqual_to([NotNull] sassy_parser.Equal_toContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>local_variable_reference</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitLocal_variable_reference([NotNull] sassy_parser.Local_variable_referenceContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>member_call_ruleset</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMember_call_ruleset([NotNull] sassy_parser.Member_call_rulesetContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>value_reference</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitValue_reference([NotNull] sassy_parser.Value_referenceContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>subtraction</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSubtraction([NotNull] sassy_parser.SubtractionContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDivision([NotNull] sassy_parser.DivisionContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>negative</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNegative([NotNull] sassy_parser.NegativeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNot([NotNull] sassy_parser.NotContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>lesser_than</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitLesser_than([NotNull] sassy_parser.Lesser_thanContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>member_call</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMember_call([NotNull] sassy_parser.Member_callContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>greater_than</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitGreater_than([NotNull] sassy_parser.Greater_thanContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>and</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAnd([NotNull] sassy_parser.AndContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>sub_sub_expression</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSub_sub_expression([NotNull] sassy_parser.Sub_sub_expressionContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMultiplication([NotNull] sassy_parser.MultiplicationContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>greater_than_equal</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitGreater_than_equal([NotNull] sassy_parser.Greater_than_equalContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>addition</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAddition([NotNull] sassy_parser.AdditionContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>indexor</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitIndexor([NotNull] sassy_parser.IndexorContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>or</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitOr([NotNull] sassy_parser.OrContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>lesser_than_equal</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitLesser_than_equal([NotNull] sassy_parser.Lesser_than_equalContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>positive</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPositive([NotNull] sassy_parser.PositiveContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>simple_call</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSimple_call([NotNull] sassy_parser.Simple_callContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_local_variable_reference</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_local_variable_reference([NotNull] sassy_parser.String_local_variable_referenceContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>remainder</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRemainder([NotNull] sassy_parser.RemainderContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>ternary</c>
	/// labeled alternative in <see cref="sassy_parser.expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitTernary([NotNull] sassy_parser.TernaryContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>value_deletion</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitValue_deletion([NotNull] sassy_parser.Value_deletionContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>boolean_true</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitBoolean_true([NotNull] sassy_parser.Boolean_trueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>boolean_false</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitBoolean_false([NotNull] sassy_parser.Boolean_falseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>number_value</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNumber_value([NotNull] sassy_parser.Number_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_value</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_value([NotNull] sassy_parser.String_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>element_string</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitElement_string([NotNull] sassy_parser.Element_stringContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>none</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNone([NotNull] sassy_parser.NoneContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>closure</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitClosure([NotNull] sassy_parser.ClosureContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>list_value</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitList_value([NotNull] sassy_parser.List_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>object_value</c>
	/// labeled alternative in <see cref="sassy_parser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitObject_value([NotNull] sassy_parser.Object_valueContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>require_sub</c>
	/// labeled alternative in <see cref="sassy_parser.require_expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRequire_sub([NotNull] sassy_parser.Require_subContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>require_or</c>
	/// labeled alternative in <see cref="sassy_parser.require_expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRequire_or([NotNull] sassy_parser.Require_orContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>require_not</c>
	/// labeled alternative in <see cref="sassy_parser.require_expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRequire_not([NotNull] sassy_parser.Require_notContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>require_guid</c>
	/// labeled alternative in <see cref="sassy_parser.require_expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRequire_guid([NotNull] sassy_parser.Require_guidContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>require_and</c>
	/// labeled alternative in <see cref="sassy_parser.require_expression"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRequire_and([NotNull] sassy_parser.Require_andContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.list"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitList([NotNull] sassy_parser.ListContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.list_values"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitList_values([NotNull] sassy_parser.List_valuesContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.obj"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitObj([NotNull] sassy_parser.ObjContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.obj_values"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitObj_values([NotNull] sassy_parser.Obj_valuesContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>literal_key</c>
	/// labeled alternative in <see cref="sassy_parser.key_value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitLiteral_key([NotNull] sassy_parser.Literal_keyContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>string_key</c>
	/// labeled alternative in <see cref="sassy_parser.key_value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitString_key([NotNull] sassy_parser.String_keyContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.argument_list"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArgument_list([NotNull] sassy_parser.Argument_listContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>named_argument</c>
	/// labeled alternative in <see cref="sassy_parser.argument"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNamed_argument([NotNull] sassy_parser.Named_argumentContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>unnamed_argument</c>
	/// labeled alternative in <see cref="sassy_parser.argument"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitUnnamed_argument([NotNull] sassy_parser.Unnamed_argumentContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.arg_decl_list"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArg_decl_list([NotNull] sassy_parser.Arg_decl_listContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>argument_without_default</c>
	/// labeled alternative in <see cref="sassy_parser.arg_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArgument_without_default([NotNull] sassy_parser.Argument_without_defaultContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>argument_with_default</c>
	/// labeled alternative in <see cref="sassy_parser.arg_decl"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArgument_with_default([NotNull] sassy_parser.Argument_with_defaultContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.function_body"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFunction_body([NotNull] sassy_parser.Function_bodyContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.function_statement"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFunction_statement([NotNull] sassy_parser.Function_statementContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.fn_level_conditional"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFn_level_conditional([NotNull] sassy_parser.Fn_level_conditionalContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.fn_level_else"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFn_level_else([NotNull] sassy_parser.Fn_level_elseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.fn_level_else_else"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFn_level_else_else([NotNull] sassy_parser.Fn_level_else_elseContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.fn_level_else_if"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFn_level_else_if([NotNull] sassy_parser.Fn_level_else_ifContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.fn_return"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFn_return([NotNull] sassy_parser.Fn_returnContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.mixin_include"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMixin_include([NotNull] sassy_parser.Mixin_includeContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>for_to_loop</c>
	/// labeled alternative in <see cref="sassy_parser.for_loop"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFor_to_loop([NotNull] sassy_parser.For_to_loopContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by the <c>for_through_loop</c>
	/// labeled alternative in <see cref="sassy_parser.for_loop"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFor_through_loop([NotNull] sassy_parser.For_through_loopContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.each_loop"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitEach_loop([NotNull] sassy_parser.Each_loopContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="sassy_parser.while_loop"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitWhile_loop([NotNull] sassy_parser.While_loopContext context) { return VisitChildren(context); }
}
} // namespace SassyPatchGrammar
